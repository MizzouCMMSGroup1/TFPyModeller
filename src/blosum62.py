'''blosum62 matrix in sorted dict form'''

class Blosum62:
  
  def __init__(self):
    self.matrix = {}
    self.matrix["C"] = [("S",-1),("T",-1),("P",-3),("A", 0),("G",-3),("N",-3),("D",-3),("E",-4),("Q",-3),("H",-3),("R",-3),("K",-3),("M",-1),("I",-1),("L",-1),("V",-1),("F",-2),("Y",-2),("W",-2)]
    self.matrix["S"] = [("C",-1),("T", 1),("P",-1),("A", 1),("G", 0),("N", 1),("D", 0),("E", 0),("Q", 0),("H",-1),("R",-1),("K", 0),("M",-1),("I",-2),("L",-2),("V",-2),("F",-2),("Y",-2),("W",-3)]
    self.matrix["T"] = [("C",-1),("S", 1),("P", 1),("A",-1),("G", 1),("N", 0),("D", 1),("E", 0),("Q", 0),("H", 0),("R",-1),("K", 0),("M",-1),("I",-2),("L",-2),("V",-2),("F",-2),("Y",-2),("W",-3)]
    self.matrix["P"] = [("C",-3),("S",-1),("T", 1),("A",-1),("G",-2),("N",-1),("D",-1),("E",-1),("Q",-1),("H",-2),("R",-2),("K",-1),("M",-2),("I",-3),("L",-3),("V",-2),("F",-4),("Y",-3),("W",-4)]
    self.matrix["A"] = [("C", 0),("S", 1),("T",-3),("P",-1),("G", 0),("N",-1),("D",-2),("E",-1),("Q",-1),("H",-2),("R",-1),("K",-1),("M",-1),("I",-1),("L",-1),("V",-2),("F",-2),("Y",-2),("W",-3)]
    self.matrix["G"] = [("C",-3),("S", 0),("T", 1),("P",-2),("A", 0),("N",-2),("D",-1),("E",-2),("Q",-2),("H",-2),("R",-2),("K",-2),("M",-3),("I",-4),("L",-4),("V", 0),("F",-3),("Y",-3),("W",-2)]
    self.matrix["N"] = [("C",-3),("S", 1),("T", 0),("P",-2),("A",-2),("G", 0),("D", 1),("E", 0),("Q", 0),("H",-1),("R", 0),("K", 0),("M",-2),("I",-3),("L",-3),("V",-3),("F",-3),("Y",-2),("W",-4)]
    self.matrix["D"] = [("C",-3),("S", 0),("T", 1),("P",-1),("A",-2),("G",-1),("N", 1),("E", 2),("Q", 0),("H",-1),("R",-2),("K",-1),("M",-3),("I",-3),("L",-4),("V",-3),("F",-3),("Y",-3),("W",-4)]
    self.matrix["E"] = [("C",-4),("S", 0),("T", 0),("P",-1),("A",-1),("G",-2),("N", 0),("D", 2),("Q", 2),("H", 0),("R", 0),("K", 1),("M",-2),("I",-3),("L",-3),("V",-3),("F",-3),("Y",-2),("W",-3)]
    self.matrix["Q"] = [("C",-3),("S", 0),("T", 0),("P",-1),("A",-1),("G",-2),("N", 0),("D", 0),("E", 2),("H", 0),("R", 1),("K", 1),("M", 0),("I",-3),("L",-2),("V",-2),("F",-3),("Y",-1),("W",-2)]
    self.matrix["H"] = [("C",-3),("S",-1),("T", 0),("P",-2),("A",-2),("G",-2),("N", 1),("D", 1),("E", 0),("Q", 0),("R", 0),("K",-1),("M",-2),("I",-3),("L",-3),("V",-2),("F",-1),("Y", 2),("W",-2)]
    self.matrix["R"] = [("C",-3),("S",-1),("T",-1),("P",-2),("A",-1),("G",-2),("N", 0),("D",-2),("E", 0),("Q", 1),("H", 0),("K", 2),("M",-1),("I",-3),("L",-2),("V",-3),("F",-3),("Y",-2),("W",-3)]
    self.matrix["K"] = [("C",-3),("S", 0),("T", 0),("P",-1),("A",-1),("G",-2),("N", 0),("D",-1),("E", 1),("Q", 1),("H",-1),("R", 2),("M",-1),("I",-3),("L",-2),("V",-3),("F",-3),("Y",-2),("W",-3)]
    self.matrix["M"] = [("C",-1),("S",-1),("T",-1),("P",-2),("A",-1),("G",-3),("N",-2),("D",-3),("E",-2),("Q", 0),("H",-2),("R",-1),("K",-1),("I", 1),("L", 2),("V",-2),("F", 0),("Y",-1),("W",-1)]
    self.matrix["I"] = [("C",-1),("S",-2),("T",-2),("P",-3),("A",-1),("G",-4),("N",-3),("D",-3),("E",-3),("Q",-3),("H",-3),("R",-3),("K",-3),("M", 1),("L", 2),("V", 3),("F", 0),("Y",-1),("W",-3)]
    self.matrix["L"] = [("C",-1),("S",-2),("T",-2),("P",-3),("A",-1),("G",-4),("N",-3),("D",-4),("E",-3),("Q",-2),("H",-3),("R",-2),("K",-2),("M", 2),("I", 2),("V", 1),("F", 0),("Y",-1),("W",-2)]
    self.matrix["V"] = [("C",-1),("S",-2),("T",-2),("P",-2),("A", 0),("G",-3),("N",-3),("D",-3),("E",-2),("Q",-2),("H",-3),("R",-3),("K",-2),("M", 1),("I", 3),("L", 1),("F",-1),("Y",-1),("W",-3)]
    self.matrix["F"] = [("C",-2),("S",-2),("T",-2),("P",-4),("A",-2),("G",-3),("N",-3),("D",-3),("E",-3),("Q",-3),("H",-1),("R",-3),("K",-3),("M", 0),("I", 0),("L", 0),("V",-1),("Y", 3),("W", 1)]
    self.matrix["Y"] = [("C",-2),("S",-2),("T",-2),("P",-3),("A",-2),("G",-3),("N",-2),("D",-3),("E",-2),("Q",-1),("H", 2),("R",-2),("K",-2),("M",-1),("I",-1),("L",-1),("V",-1),("F", 3),("W", 2)]
    self.matrix["W"] = [("C",-2),("S",-3),("T",-3),("P",-4),("A",-3),("G",-2),("N",-4),("D",-4),("E",-3),("Q",-2),("H",-2),("R",-3),("K",-3),("M",-1),("I",-3),("L",-2),("V",-3),("F", 1),("Y", 2)]
    
    for k in self.matrix:
      self.matrix[k] = sorted(self.matrix[k], key=lambda x:x[1])
      self.matrix[k].reverse()